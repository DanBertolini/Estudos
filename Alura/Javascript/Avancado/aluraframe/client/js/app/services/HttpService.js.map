{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleError","json","body","headers","method","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;iDAEIC,G,EAAK;AACd,4BAAIA,IAAIC,EAAR,EAAY;AACR,mCAAOD,GAAP;AACH,yBAFD,MAEO;AACH,kCAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;AACJ;;;wCAEGC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGA;;;;;;;;;;;;;;;;AAiBH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACVM,qCAAS;AACL,gDAAgB;AADX,6BADC;AAIVC,oCAAQ,MAJE;AAKVF,kCAAMG,KAAKC,SAAL,CAAeJ,IAAf;AALI,yBAAX,EAOFH,IAPE,CAOG;AAAA,mCAAO,OAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBAPH,EAQFM,IARE,CAQG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBARH,CAAP;AASA;;;;;;;;;;;;;;;;;AAmBH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    _handleError(res) {\r\n        if (res.ok) {\r\n            return res;\r\n        } else {\r\n            throw new Error(res.statusText);\r\n        }\r\n    }\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n            .then(res => this._handleError(res))\r\n            .then(res => res.json());\r\n        /*\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(JSON.parse(xhr.response));\r\n                    } else {\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        });\r\n        */\r\n    }\r\n\r\n    post(url, body) {\r\n\r\n        return fetch(url, {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => this._handleError(res))\r\n            .then(res => res.json());\r\n        /*\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(JSON.parse(xhr.response));\r\n                    } else {\r\n                        reject();\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(JSON.stringify(body));\r\n\r\n        });\r\n        */\r\n    }\r\n}"]}