{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoDAO","ConnectionFactory","NegociacaoService","_http","tipo","Promise","all","_obterNegociacoesSemanaAtual","_obterNegociacoesSemanaPassada","_obterNegociacoesSemanaRetrasada","then","negociacoes","reduce","finalArr","array","concat","get","result","map","objNeg","quantidade","valor","Date","data","catch","err","console","error","Error","negociacao","getConnection","connection","dao","adiciona","post","toISOString","lista","deletar","listaAtual","obterNegociacoes","filter","some","isEquals","negExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { Negociacao } from '../models/Negociacao';\r\nimport { NegociacaoDAO } from '../dao/NegociacaoDAO';\r\nimport { ConnectionFactory } from '../services/ConnectionFactory';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n\r\n    }\r\n\r\n    obterNegociacoes(tipo) {\r\n        return Promise.all([\r\n            this._obterNegociacoesSemanaAtual(),\r\n            this._obterNegociacoesSemanaPassada(),\r\n            this._obterNegociacoesSemanaRetrasada(),\r\n        ]).then(negociacoes => negociacoes.reduce((finalArr, array) => finalArr.concat(array), []));\r\n    }\r\n\r\n    _obterNegociacoesSemanaAtual() {\r\n        return this._http.get('/negociacoes/semana').then(result => {\r\n                return result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                    objNeg.valor, new Date(objNeg.data)));\r\n                // resolve(result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                //     objNeg.valor, new Date(objNeg.data))));\r\n                /*callback(null, JSON.parse(xhr.response)\r\n                    .map(objNeg => new Negociacao(objNeg.quantidade,\r\n                        objNeg.valor, new Date(objNeg.data))));*/\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                throw new Error(\"Falha ao importar negociações da semana\");\r\n                // reject(msgErr);\r\n                //callback(msgErr);\r\n            });\r\n    }\r\n\r\n    _obterNegociacoesSemanaPassada() {\r\n        return this._http.get('/negociacoes/anterior').then(result => {\r\n                return result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                    objNeg.valor, new Date(objNeg.data)));\r\n                // resolve(result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                //     objNeg.valor, new Date(objNeg.data))));\r\n                /*callback(null, JSON.parse(xhr.response)\r\n                    .map(objNeg => new Negociacao(objNeg.quantidade,\r\n                        objNeg.valor, new Date(objNeg.data))));*/\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                throw new Error(\"Falha ao importar negociações da semana anterior\");\r\n                // reject(msgErr);\r\n                //callback(msgErr);\r\n            });\r\n    }\r\n\r\n    _obterNegociacoesSemanaRetrasada() {\r\n        return this._http.get('/negociacoes/retrasada').then(result => {\r\n                return result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                    objNeg.valor, new Date(objNeg.data)));\r\n                // resolve(result.map(objNeg => new Negociacao(objNeg.quantidade,\r\n                //     objNeg.valor, new Date(objNeg.data))));\r\n                /*callback(null, JSON.parse(xhr.response)\r\n                    .map(objNeg => new Negociacao(objNeg.quantidade,\r\n                        objNeg.valor, new Date(objNeg.data))));*/\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                throw new Error(\"Falha ao importar negociações da semana retrasada\");\r\n                // reject(msgErr);\r\n                //callback(msgErr);\r\n            });\r\n    }\r\n\r\n    cadastrarNegociacao(negociacao) {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => {\r\n                return new NegociacaoDAO(connection)\r\n            }).then(dao => {\r\n                return dao.adiciona(negociacao);\r\n            }).then(negociacao => {\r\n                return this._http.post('/negociacoes', {\r\n                    data: negociacao.data.toISOString(),\r\n                    quantidade: negociacao.quantidade,\r\n                    valor: negociacao.valor\r\n                });\r\n            }).then(() => {\r\n                return \"Negociação cadastrada com sucesso\";\r\n            }).catch(err => {\r\n                console.error(err);\r\n                throw new Error(\"Não foi possivel concluir o cadastro da negociação\");\r\n            })\r\n    }\r\n\r\n    listaNegociacoes() {\r\n        return ConnectionFactory.getConnection().then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.lista())\r\n            .catch(err => {\r\n                console.error(err);\r\n                throw new Error('Não foi possivel listar os registros de negociação');\r\n            });\r\n\r\n    }\r\n\r\n    apagar() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDAO(connection).deletar())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(err => {\r\n                console.error(err);\r\n                throw new Error('Não foi possivel deletar os registros de negociação');\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negExistente =>\r\n                        negociacao.isEquals(negExistente))\r\n                ))\r\n            .catch(err => {\r\n                console.error(err);\r\n                throw new Error('Não foi possivel importar os registros de negociação');            \r\n            })\r\n    }\r\n}"]}