{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["Negociacao","NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","e","target","error","cursor","openCursor","negociacoes","response","result","push","value","_quantidade","_valor","_data","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEIC,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAELP,UAFK,CAAd;;AAIAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBN,wCAAQF,UAAR;AACH,6BAFD;;AAIAI,oCAAQK,OAAR,GAAkB,aAAK;AACnBN,uCAAOO,EAAEC,MAAF,CAASC,KAAhB;AACH,6BAFD;AAGH,yBAbM,CAAP;AAcH;;;4CAEO;AAAA;;AACJ,+BAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIU,SAAS,OAAKf,WAAL,CAAiBO,WAAjB,CAA6B,aAA7B,EAA4C,UAA5C,EACRC,WADQ,CACI,aADJ,EAERQ,UAFQ,EAAb;;AAIA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOL,SAAP,GAAmB,UAACQ,QAAD,EAAc;AAC7B,oCAAIH,SAASG,SAASL,MAAT,CAAgBM,MAA7B;AACA,oCAAIJ,MAAJ,EAAY;AACRE,gDAAYG,IAAZ,CAAiB,IAAIvB,UAAJ,CAAekB,OAAOM,KAAP,CAAaC,WAA5B,EACbP,OAAOM,KAAP,CAAaE,MADA,EACQR,OAAOM,KAAP,CAAaG,KADrB,CAAjB;AAEAT,2CAAOU,QAAP;AACH,iCAJD,MAIO;AACHrB,4CAAQa,WAAR;AACH;AACJ,6BATD;AAUAF,mCAAOJ,OAAP,GAAiB,UAACO,QAAD,EAAc;AAC3Bb,uCAAOa,SAASL,MAAT,CAAgBM,MAAvB;AACH,6BAFD;AAGH,yBArBM,CAAP;AAsBH;;;8CAES;AAAA;;AACN,+BAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,OAAKP,MADR,EAETyB,KAFS,EAAd;;AAIApB,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBN,uCAAOO,EAAEC,MAAF,CAASC,KAAhB;AACH,6BAFD;AAGH,yBAZM,CAAP;AAaH","file":"NegociacaoDAO.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoDAO {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes'\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection.transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve(negociacao);\r\n            }\r\n\r\n            request.onerror = e => {\r\n                reject(e.target.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    lista() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection.transaction('negociacoes', 'readonly')\r\n                .objectStore(\"negociacoes\")\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (response) => {\r\n                let cursor = response.target.result;\r\n                if (cursor) {\r\n                    negociacoes.push(new Negociacao(cursor.value._quantidade,\r\n                        cursor.value._valor, cursor.value._data));\r\n                    cursor.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n            cursor.onerror = (response) => {\r\n                reject(response.target.result);\r\n            };\r\n        });\r\n    }\r\n\r\n    deletar() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection.transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = e => {\r\n                reject(e.target.error);\r\n            };\r\n        });\r\n    }\r\n}"]}